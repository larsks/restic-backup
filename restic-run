#!/bin/bash

set -eu

: ${RESTIC_GLOBAL_CONFIG:=$HOME/config}
: ${RESTIC_NO_SCRIPTS:=0}

log () {
	echo "${0##*/}: $1" >&2
}

error () {
	log "ERROR: $1"
	exit ${2:-1}
}

while [ $# -gt 0 ]; do
	case $1 in
	(--no-scripts)
		RESTIC_NO_SCRIPTS=1
		shift
		;;

	(--)	shift
		break
		;;

	(-*)	error "no such option: $1" 2
		;;

	(*)	break
		;;
	esac
done

action=$1
shift

if [ -f "$RESTIC_GLOBAL_CONFIG" ]; then
	log "reading configuration from $RESTIC_GLOBAL_CONFIG"
	set -o allexport; . "$RESTIC_GLOBAL_CONFIG"; set +o allexport
fi

if [ -f config ]; then
	log "reading configuration from ./config"
	set -o allexport; . ./config; set +o allexport
fi

if [ -x before ] && [ "$RESTIC_NO_SCRIPTS" != 1 ]; then
	tmpfile=$(mktemp ./beforeXXXXXX)
	trap "rm -f $tmpfile" EXIT
	log "running before script"
	if ! ./before $action > $tmpfile; then
		error "before script failed"
		exit 1
	fi

	if [ -s $tmpfile ]; then
		log "reading configuration from before script"
		set -o allexport; . $tmpfile; set +o allexport
	fi
fi

if [ "$action" = "backup" ]; then
	log "running restic-backup $*"
	restic-backup "$@"
elif [ "$action" = "clean" ]; then
	log "running restic-clean $*"
	restic-clean "$@"
elif [ "$action" = "shell" ]; then
	PS1='(restic) $ ' ${SHELL:-/bin/bash --norc}
else
	log "running restic $action $*"
	restic $action "$@"
fi

if [ -x after ] && [ "$RESTIC_NO_SCRIPTS" != 1 ]; then
	log "running after script"
	if ! ./after $action; then
		error "after script failed"
		exit 1
	fi
fi
